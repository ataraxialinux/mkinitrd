#!/usr/bin/env bash

msg() { printf "\033[1;34m::\033[0m %s\n" "$@"; }
die() { printf "\033[1;31m::\033[0m %s\n" "$@"; exit 1; }

copylib() {
	for i in $1; do
		j="$(${CROSS_COMPILE}objdump -p "$ROOTFS/$i" | grep NEEDED | awk '{print $2}')"
		ld="$(${CROSS_COMPILE}readelf -l "$ROOTFS/$i" | grep Requesting | awk '{print $4}' | cut -d':' -f2 | tr -d ' ]' | sed -e 's|/lib/||')"
		for ji in $j; do
			if [ ! -f "$TMPDIR/usr/lib/$ji" ]; then
				cp "$ROOTFS/usr/lib/$ji" "$TMPDIR"/usr/lib/$ji
			fi
			ln -sf libc.so "$TMPDIR"/usr/lib/$ld
		done
	done
}

main() {
	local sharedbins="cat cp dd ls mkdir mknod mount umount sed sleep ln rm uname readlink basename blkid switch_root kmod udevd udevadm clear dmesg grep printf setsid lvm dmsetup"
	local staticbins="mksh busybox ctrlaltdel halt"
	local busyboxlinks="cttyhack killall"
	local kmodlinks="insmod lsmod rmmod depmod modprobe modinfo"
	local lvmlinks="lvchange lvrename lvextend lvcreate lvdisplay lvscan pvchange pvck pvcreate pvdisplay pvscan vgchange vgcreate vgscan vgrename vgck"
	[ -z "$kver" ] && local kver="$(uname -r)"

	msg "Creating initramfs image for $kver"
	TOPDIR="$PWD"
	TMPDIR="$(mktemp -d)"

	cd "$TMPDIR"
	mkdir -p usr/bin usr/lib usr/lib/firmware usr/lib/modules/$kver/kernel/drivers/usb dev proc sys tmp run etc/modprobe.d etc/udev/rules.d

	ln -sf usr/bin bin
	ln -sf usr/lib lib
	ln -sf bin usr/sbin

	cp -a "$ROOTFS"/usr/lib/udev "$TMPDIR"/usr/lib/udev
	ln -sf /usr/lib/udev "$TMPDIR"/etc/udev
	if [ -f "$ROOTFS/etc/udev/udev.conf" ]; then
		cp "$ROOTFS"/etc/udev/udev.conf "$TMPDIR"/etc/udev/udev.conf
	fi
	cp -a "$ROOTFS"/etc/lvm "$TMPDIR"/etc

	for i in $sharedbins; do
		cp "$ROOTFS"/usr/bin/$i "$TMPDIR"/usr/bin/$i
		copylib /usr/bin/$i
	done

	for i in $staticbins; do
		cp "$ROOTFS"/usr/bin/$i "$TMPDIR"/usr/bin/$i
	done

	for i in $busyboxlinks; do
		ln -sf busybox "$TMPDIR"/usr/bin/$i
	done

	for i in $kmodlinks; do
		ln -sf kmod "$TMPDIR"/usr/bin/$i
	done

	for i in $lvmlinks; do
		ln -sf lvm "$TMPDIR"/usr/bin/$i
	done

	ln -sf mksh "$TMPDIR"/usr/bin/sh

	for kmoddir in crypto fs lib; do
		if [ -d "$ROOTFS/usr/lib/modules/$kver/kernel/$kmoddir" ]; then
			cp -R "$ROOTFS"/usr/lib/modules/$kver/kernel/$kmoddir "$TMPDIR"/usr/lib/modules/$kver/kernel
		fi
	done

	for kmoddir in block ata md firewire scsi message pcmcia virtio thunderbolt; do
		if [ -d "$ROOTFS/usr/lib/modules/$kver/kernel/drivers/$kmoddir" ]; then
			cp -R "$ROOTFS"/usr/lib/modules/$kver/kernel/drivers/$kmoddir "$TMPDIR"/usr/lib/modules/$kver/kernel/drivers
		fi
	done

	for kmoddir in host storage; do
		if [ -d "$ROOTFS/usr/lib/modules/$kver/kernel/drivers/usb/$kmoddir" ]; then
			cp -R "$ROOTFS"/usr/lib/modules/$kver/kernel/drivers/usb/$kmoddir "$TMPDIR"/usr/lib/modules/$kver/kernel/drivers/usb
		fi
	done

	if [ -d "$MODULES" ]; then
		depmod -a -b "$TMPDIR"/usr $kver
	fi

	install -m755 "$TOPDIR"/init "$TMPDIR"/init

	pushd "$TMPDIR"
		find . | gcpio -H newc -o | zstd -12 > "$TOPDIR"/seiba.zst
	popd

	msg "Done"
}

main

exit 0

