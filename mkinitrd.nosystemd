#!/usr/bin/sh
#

umask 022
unalias -a

pushd() { command pushd "$1" > /dev/null; }
popd() { command popd "$1" > /dev/null; }
msg() { printf "\033[1;34m::\033[0m %s\n" "$@"; }
warn() { printf "\033[1;33m::\033[0m %s\n" "$@"; }
die() { printf "\033[1;31m::\033[0m %s\n" "$@"; exit 1; }

check_root() {
	if [[ $EUID -ne 0 ]]; then
		die "You must be root to run 'neko'"
	fi
}

copyfile() {
	[ -z "$1" ] && die "Specify file"

	while [ "$1" ]; do
		if [ ! -f "$rootdir/$1" ]; then
			die "$1: file not found"
		fi

		if [ ! -f "$tmpdir/$1" ]; then
			cp "$rootdir"/$1 "$tmpdir"/$1
		fi
		shift
	done
}

copylib() {
	[ -z "$1" ] && die "Specify file"

	while [ "$1" ]; do
		for i in $(ldd "$tmpdir"/$1 | awk '{print $3}' | sed -e 's|/lib|/usr/lib|' | sed -e 's|/usr/usr/lib|/usr/lib|'); do
			if [ ! -f "$rootdir/$i" ]; then
				warn "$i: file not found"
				break
			fi

			if [ ! -f "$tmpdir/$i" ]; then
				cp "$rootdir"/$i "$tmpdir"/$i
			fi
		done
		shift
	done
}

main() {
	export LC_ALL="POSIX"

	kernel="$(uname -r)"
	output="/boot/seiba.zst"

	while getopts k:o:r: opts; do
		case $opts in
			k) kernel="$OPTARG" ;;
			o) output="$OPTARG" ;;
			r) rootdir="$(realpath $OPTARG)"; rootdir="${rootdir%/}" ;;
		esac
	done
	shift $((OPTIND - 1))

	check_root

	tmpdir="$(mktemp -d)"

	cd "$tmpdir"
	mkdir -p dev usr/bin usr/lib/modules usr/lib/firmware usr/lib/systemd usr/lib/udev/rules.d run sys proc etc/udev/rules.d sysroot work
	mkdir -p usr/lib/modules/$kernel/kernel/drivers/usb
	ln -sf usr/bin bin
	ln -sf usr/bin sbin
	ln -sf usr/lib lib
	ln -sf bin usr/sbin

	echo 'root:x:0:root' >> "$tmpdir"/etc/group
	echo 'root:::root' >> "$tmpdir"/etc/gshadow
	echo 'root:x:0:0:root:/:/usr/bin/mksh' >> "$tmpdir"/etc/passwd
	echo 'nobody:x:99:99:nobody:/:/usr/bin/nologin' >> "$tmpdir"/etc/passwd
	echo 'root::14871::::::' >> "$tmpdir"/etc/shadow
	echo 'nobody:x:14871::::::' >> "$tmpdir"/etc/shadow

	chmod 0600 "$tmpdir"/etc/gshadow "$tmpdir"/etc/shadow

	copyfile /usr/bin/mksh \
		/usr/bin/grep \
		/usr/bin/cat \
		/usr/bin/cp \
		/usr/bin/dd \
		/usr/bin/df \
		/usr/bin/killall \
		/usr/bin/ls \
		/usr/bin/mkdir \
		/usr/bin/mknod \
		/usr/bin/mount \
		/usr/bin/umount \
		/usr/bin/mountpoint \
		/usr/bin/sed \
		/usr/bin/sleep \
		/usr/bin/ln \
		/usr/bin/rm \
		/usr/bin/uname \
		/usr/bin/kmod \
		/usr/bin/blkid \
		/usr/bin/chroot \
		/usr/bin/chown \
		/usr/bin/flock \
		/usr/bin/mv \
		/usr/bin/mkfifo \
		/usr/bin/setsid \
		/usr/bin/findmnt \
		/usr/bin/sulogin \
		/usr/bin/lvm \
		/usr/bin/dmsetup \
		/usr/bin/dmeventd \
		/usr/bin/less \
		/usr/bin/more \
		/usr/bin/swapon \
		/usr/bin/swapoff \
		/usr/bin/printf \
		/usr/bin/dmesg \
		/usr/bin/udevadm \
		/usr/lib/systemd/systemd-udevd \
		/usr/lib/udev/rules.d/10-dm.rules \
		/usr/lib/udev/rules.d/11-dm-lvm.rules \
		/usr/lib/udev/rules.d/13-dm-disk.rules \
		/usr/lib/udev/rules.d/50-udev-default.rules \
		/usr/lib/udev/rules.d/60-block.rules \
		/usr/lib/udev/rules.d/60-cdrom_id.rules \
		/usr/lib/udev/rules.d/60-persistent-storage.rules \
		/usr/lib/udev/rules.d/70-uaccess.rules \
		/usr/lib/udev/rules.d/71-seat.rules \
		/usr/lib/udev/rules.d/73-seat-late.rules \
		/usr/lib/udev/rules.d/75-net-description.rules \
		/usr/lib/udev/rules.d/80-drivers.rules \
		/usr/lib/udev/rules.d/80-net-setup-link.rules \
		/usr/lib/udev/rules.d/90-vconsole.rules \
		/usr/lib/udev/rules.d/95-dm-notify.rules \
		/usr/lib/udev/rules.d/99-systemd.rules \
		/usr/lib/udev/ata_id \
		/usr/lib/udev/cdrom_id \
		/usr/lib/udev/scsi_id
	copylib /usr/bin/mksh \
		/usr/bin/grep \
		/usr/bin/cat \
		/usr/bin/cp \
		/usr/bin/dd \
		/usr/bin/df \
		/usr/bin/killall \
		/usr/bin/ls \
		/usr/bin/mkdir \
		/usr/bin/mknod \
		/usr/bin/mount \
		/usr/bin/umount \
		/usr/bin/mountpoint \
		/usr/bin/sed \
		/usr/bin/sleep \
		/usr/bin/ln \
		/usr/bin/rm \
		/usr/bin/uname \
		/usr/bin/kmod \
		/usr/bin/blkid \
		/usr/bin/chroot \
		/usr/bin/chown \
		/usr/bin/flock \
		/usr/bin/mv \
		/usr/bin/mkfifo \
		/usr/bin/setsid \
		/usr/bin/findmnt \
		/usr/bin/sulogin \
		/usr/bin/lvm \
		/usr/bin/dmsetup \
		/usr/bin/dmeventd \
		/usr/bin/less \
		/usr/bin/more \
		/usr/bin/swapon \
		/usr/bin/swapoff \
		/usr/bin/printf \
		/usr/bin/dmesg \
		/usr/bin/udevadm \
		/usr/lib/systemd/systemd-udevd

	ln -sf mksh "$tmpdir"/usr/bin/sh

	cat > "$tmpdir"/init <<- EOF
		#!/usr/bin/sh
		#
		# Some parts were taken from Dragora GNU+Linux-Libre, for more information visit https://dragora.org/
		#

		export PATH="/usr/bin"

		msg() { printf "live-init: %s\n" >> /dev/kmsg "$@"; }

		rescue_shell() {
			msg "Error occurred! Dropping in rescue shell..."
			export PS1="[\e[0;31mRESCUE SHELL\e[m] $ "
			sulogin -p
			msg "Rebooting."
			sleep 1
			halt -r
		}

		dmesg -n 1

		msg "Mounting pseudo-filesystems"
		mount -t proc proc /proc -o nosuid,noexec,nodev || rescue_shell
		mount -t sysfs sys /sys -o nosuid,noexec,nodev || rescue_shell
		mount -t tmpfs run /run -o mode=0755,nosuid,nodev || rescue_shell
		mount -t devtmpfs dev /dev -o mode=0755,nosuid || rescue_shell
		mount -t tmpfs tmpfs -o rw,size=100% /work || rescue_shell
		mkdir -p /run/lvm /dev/pts /dev/shm /run/live-os || rescue_shell
		mount -t devpts devpts /dev/pts -o mode=0620,gid=5,nosuid,noexec || rescue_shell
		mount -t tmpfs shm /dev/shm -o mode=1777,nosuid,nodev || rescue_shell

		msg "Starting systemd-udevd"
		/usr/lib/systemd/systemd-udevd --daemon --resolve-names=never || rescue_shell
		udevadm trigger || rescue_shell
		udevadm settle || rescue_shell

		msg "Mounting Live OS"
		mkdir -p /work/squash /work/rw /work/work
		mount -n -r /dev/disk/by-label/ataraxialinux /run/live-os || rescue_shell
		mount -n -r -o loop -t squashfs /run/live-os/seiba/seiba.sfs /work/squash || rescue_shell
		mount -n -o lowerdir=/work/squash,upperdir=/work/rw,workdir=/work/work -t overlay overlay /sysroot || rescue_shell
		rescue_shell
	EOF
	chmod +x "$tmpdir"/init

	touch "$tmpdir"/etc/initrd-release
	cat > "$tmpdir"/usr/lib/os-release <<- EOF
		NAME="Live OS init"
		VERSION="1.0"
		ID="ataraxia"
		VERSION_ID="1.0"
		PRETTY_NAME="Live OS init"
	EOF
	ln -sf /usr/lib/os-release "$tmpdir"/etc/os-release
	ln -sf ../proc/mounts "$tmpdir"/etc/mtab

	for tool in {ins,ls,rm,dep}mod mod{probe,info}; do
		ln -sf kmod "$tmpdir"/usr/bin/$tool
	done
	for tool in lvchange lvrename lvextend lvcreate lvdisplay \
			lvscan pvchange pvck pvcreate pvdisplay pvscan \
			vgchange vgcreate vgscan vgrename vgck; do
		ln -sf lvm "$tmpdir"/usr/bin/$tool
	done

	for kmoddir in crypto fs lib; do
		if [ -d "$rootdir/usr/lib/modules/$kernel/kernel/$kmoddir" ]; then
			cp -R "$rootdir"/usr/lib/modules/$kernel/kernel/$kmoddir "$tmpdir"/usr/lib/modules/$kernel/kernel
		fi
	done

	for kmoddir in block ata md firewire scsi message pcmcia virtio thunderbolt; do
		if [ -d "$rootdir/usr/lib/modules/$kernel/kernel/drivers/$kmoddir" ]; then
			cp -R "$rootdir"/usr/lib/modules/$kernel/kernel/drivers/$kmoddir "$tmpdir"/usr/lib/modules/$kernel/kernel/drivers
		fi
	done

	for kmoddir in host storage; do
		if [ -d "$rootdir/usr/lib/modules/$kernel/kernel/drivers/usb/$kmoddir" ]; then
			cp -R "$rootdir"/usr/lib/modules/$kernel/kernel/drivers/usb/$kmoddir "$tmpdir"/usr/lib/modules/$kernel/kernel/drivers/usb
		fi
	done

	touch "$tmpdir"/usr/lib/modules/$kernel/modules.order "$tmpdir"/usr/lib/modules/$kernel/modules.builtin
	depmod -a -b "$tmpdir"/usr $kernel

	find . | cpio -H newc -o | zstd -19 > "$output"
	rm -rf "$tmpdir"
}

main "$@"

exit 0

